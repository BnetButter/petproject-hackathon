version: '3.8'

services:

  airflow:
    build:
      context: ./data-scraper
      dockerfile: Dockerfile
    container_name: airflow
    env_file: .env
    volumes:
      - ./data-scraper:/app
      - ./data-scraper/airflow.cfg:/home/seluser/airflow/airflow.cfg
    stdin_open: true
    tty: true
    command: [ "/app/entrypoint.sh" ]

    networks:
      - pet_network

  airflow-gateway:
    build:
      context: ./data-scraper
      dockerfile: Dockerfile
    container_name: airflow-gateway
    env_file: .env
    volumes:
      - ./data-scraper:/app
      - ./data-scraper/airflow.cfg:/home/seluser/airflow/airflow.cfg
    stdin_open: true
    tty: true
    command: [ "python3", "/app/src/app.py" ]

    networks:
      - pet_network

  petproject:
    build:
      context: ./petproject
      dockerfile: Dockerfile
    container_name: petproject
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./petproject/src:/usr/src/app/src
      - ./petproject/public:/usr/src/app/public
    working_dir: /usr/src/app
    stdin_open: true
    tty: true
    command: [ "yarn", "start" ]
    networks:
      - pet_network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    env_file:
      - .env
    ports:
      - "80:80"
    networks:
      - pet_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - petproject
      - geoserver
  
  postgis:
    image: postgis/postgis:latest
    container_name: postgis_db
    env_file:
      - .env
    networks:
      - pet_network

  geoserver:
    image: kartoza/geoserver:latest
    container_name: geoserver
    ports:
      - "8080:8080"
    env_file:
      .env
    depends_on:
      - postgis
    networks:
      - pet_network

volumes:
   geoserver-data:
   geo-db-data:


networks:
  pet_network:
    driver: bridge
